name: Deploy to Staging

on:
  push:
    branches: [ develop ]

jobs:
  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Deploy to ECS
      run: |
        aws ecs update-service --cluster staging --service backend --force-new-deployment
    
  deploy-web:
    name: Deploy Web App
    runs-on: ubuntu-latest
    environment: staging
    needs: deploy-backend
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'yarn'
    
    - name: Build
      run: |
        cd packages/web
        yarn install --frozen-lockfile
        yarn build
    
    - name: Deploy to S3
      run: |
        aws s3 sync packages/web/build/ s3://${{ secrets.STAGING_BUCKET }} --delete
    
    - name: Invalidate CloudFront
      run: |
        aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_ID }} --paths "/*"
    
  deploy-mobile-beta:
    name: Deploy Mobile Beta
    runs-on: macos-latest
    environment: staging
    needs: deploy-backend
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'yarn'
    
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true
    
    - name: Deploy to TestFlight
      run: |
        cd packages/mobile/ios
        bundle exec fastlane beta
    
    - name: Deploy to Play Store Beta
      run: |
        cd packages/mobile/android
        bundle exec fastlane beta 